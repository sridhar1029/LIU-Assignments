'<br> Obj 2: ', rownames(bball)[index2]))%>%
add_lines(x=~sh$x, y=~sh$yf)
bball$V1 = coordsMDS$V1
bball$V2 = coordsMDS$V2
cols_bball = colnames(bball)
dim(bball)[2]
plots_bball = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball[[pl_name]] = ggplot(bball, aes_string("V1", col_name)) +
geom_point() + geom_line(aes(x=0))
}
bball$`2B`
bball$League
bball$2B
library(ggplot2)
library(plotly)
library(readxl)
library(MASS)
library(gridExtra)
#Lab 2 Assignment 2
#Q1
bball = read_xlsx("baseball-2016.xlsx", sheet = "Sheet1", col_names = TRUE)
head(bball)
smp_size <- floor(0.30 * nrow(bball))
## set the seed to make your partition reproducible
set.seed(12345)
rand_ind <- sample(seq_len(nrow(bball)), size = smp_size)
rand_selected = bball[rand_ind, ]
head(rand_selected)
#Q2
bball.numeric = rand_selected[,3:27]
distance = dist(bball.numeric)
res = isoMDS(distance, k=2, p=2)
coords = res$points
coordsMDS = as.data.frame(coords)
coordsMDS$name = rownames(coordsMDS)
coordsMDS$league = rand_selected$League
plot_ly(coordsMDS, x=~V1, y=~V2, type="scatter", mode = "markers"
, hovertext=~name, color= ~league)
#Q3
sh <- Shepard(distance, coords)
delta <-as.numeric(distance)
D<- as.numeric(dist(coords))
n=nrow(coords)
index=matrix(1:n, nrow=n, ncol=n)
index1=as.numeric(index[lower.tri(index)])
n=nrow(coords)
index=matrix(1:n, nrow=n, ncol=n, byrow = T)
index2=as.numeric(index[lower.tri(index)])
plot_ly()%>%
add_markers(x=~delta, y=~D, hoverinfo = 'text',
text = ~paste('Obj1: ', rownames(rand_selected)[index1],
'<br> Obj 2: ', rownames(rand_selected)[index2]))%>%
add_lines(x=~sh$x, y=~sh$yf)
#Q4
rand_selected$V1 = coordsMDS$V1
rand_selected$V2 = coordsMDS$V2
cols_bball = colnames(rand_selected)
dim(rand_selected)[2]
plots_bball = list()
rand_selected$V1 = coordsMDS$V1
rand_selected$V2 = coordsMDS$V2
cols_bball = colnames(rand_selected)
dim(rand_selected)[2]
plots_bball = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball[[pl_name]] = ggplot(rand_selected, aes_string("V1", col_name)) +
geom_point() + geom_line(aes(x=0))
}
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
print(col_name)
plots_bball[[pl_name]] = ggplot(rand_selected, aes_string("V1", col_name)) +
geom_point() + geom_line(aes(x=0))
}
cols_bball
cols_bball = c("Team", "League", "Won", "Lost", "Runs.per.game", "HR.per.game",
"AB", "Runs", "Hits", "TwoB", "ThreeB", "HR", "RBI", "StolenB", "CaughtS",
"BB", "SO", "BAvg", "OBP", "SLG", "OPS", "TB", "GDP", "HBP", "SH",
"SF", "IBB", "LOB", "V1", "V2")
dim(rand_selected)[2]
cols_bball = c("Team", "League", "Won", "Lost", "Runs.per.game", "HR.per.game",
"AB", "Runs", "Hits", "TwoB", "ThreeB", "HR", "RBI", "StolenB", "CaughtS",
"BB", "SO", "BAvg", "OBP", "SLG", "OPS", "TB", "GDP", "HBP", "SH",
"SF", "IBB", "LOB", "V1", "V2")
colnames(rand_selected) = cols_bball
dim(rand_selected)[2]
plots_bball = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
print(col_name)
plots_bball[[pl_name]] = ggplot(rand_selected, aes_string("V1", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball, ncol = 6, nrow = 6)
plots_bball2 = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball2[[pl_name]] = ggplot(bball, aes_string("V2", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball2, ncol = 6, nrow = 6)
rand_selected$V1 = coordsMDS$V1
rand_selected$V2 = coordsMDS$V2
cols_bball = c("Team", "League", "Won", "Lost", "Runs.per.game", "HR.per.game",
"AB", "Runs", "Hits", "TwoB", "ThreeB", "HR", "RBI", "StolenB", "CaughtS",
"BB", "SO", "BAvg", "OBP", "SLG", "OPS", "TB", "GDP", "HBP", "SH",
"SF", "IBB", "LOB", "V1", "V2")
colnames(rand_selected) = cols_bball
dim(rand_selected)[2]
plots_bball = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball[[pl_name]] = ggplot(rand_selected, aes_string("V1", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball, ncol = 6, nrow = 6)
plots_bball2 = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball2[[pl_name]] = ggplot(bball, aes_string("V2", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball2, ncol = 6, nrow = 6)
plots_bball2 = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball2[[pl_name]] = ggplot(bball, aes_string("V2", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball2, ncol = 6, nrow = 6)
plots_bball2 = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball2[[pl_name]] = ggplot(rand_selected, aes_string("V2", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball2, ncol = 6, nrow = 6)
library(ggplot2)
library(plotly)
library(readxl)
library(MASS)
library(gridExtra)
#Lab 2 Assignment 2
#Q1
bball = read_xlsx("baseball-2016.xlsx", sheet = "Sheet1", col_names = TRUE)
head(bball)
smp_size <- floor(0.30 * nrow(bball))
## set the seed to make your partition reproducible
set.seed(12345)
rand_ind <- sample(seq_len(nrow(bball)), size = smp_size)
rand_selected = bball[rand_ind, ]
head(rand_selected)
library(ggplot2)
library(plotly)
library(readxl)
library(MASS)
library(gridExtra)
#Lab 2 Assignment 2
#Q1
bball = read_xlsx("baseball-2016.xlsx", sheet = "Sheet1", col_names = TRUE)
head(bball)
smp_size <- floor(0.30 * nrow(bball))
## set the seed to make your partition reproducible
set.seed(12345)
rand_ind <- sample(seq_len(nrow(bball)), size = smp_size)
rand_selected = bball[rand_ind, ]
head(rand_selected)
#Q2
bball.numeric = scale(rand_selected[,3:27])
distance = dist(bball.numeric)
res = isoMDS(distance, k=2, p=2)
coords = res$points
coordsMDS = as.data.frame(coords)
coordsMDS$name = rownames(coordsMDS)
coordsMDS$league = rand_selected$League
plot_ly(coordsMDS, x=~V1, y=~V2, type="scatter", mode = "markers"
, hovertext=~name, color= ~league)
#Q3
sh <- Shepard(distance, coords)
delta <-as.numeric(distance)
D<- as.numeric(dist(coords))
n=nrow(coords)
index=matrix(1:n, nrow=n, ncol=n)
index1=as.numeric(index[lower.tri(index)])
n=nrow(coords)
index=matrix(1:n, nrow=n, ncol=n, byrow = T)
index2=as.numeric(index[lower.tri(index)])
plot_ly()%>%
add_markers(x=~delta, y=~D, hoverinfo = 'text',
text = ~paste('Obj1: ', rownames(rand_selected)[index1],
'<br> Obj 2: ', rownames(rand_selected)[index2]))%>%
add_lines(x=~sh$x, y=~sh$yf)
rand_selected$V1 = coordsMDS$V1
rand_selected$V2 = coordsMDS$V2
cols_bball = c("Team", "League", "Won", "Lost", "Runs.per.game", "HR.per.game",
"AB", "Runs", "Hits", "TwoB", "ThreeB", "HR", "RBI", "StolenB", "CaughtS",
"BB", "SO", "BAvg", "OBP", "SLG", "OPS", "TB", "GDP", "HBP", "SH",
"SF", "IBB", "LOB", "V1", "V2")
colnames(rand_selected) = cols_bball
dim(rand_selected)[2]
plots_bball = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball[[pl_name]] = ggplot(rand_selected, aes_string("V1", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball, ncol = 6, nrow = 6)
plots_bball2 = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball2[[pl_name]] = ggplot(rand_selected, aes_string("V2", col_name)) +
geom_point() + geom_line(aes(x=0))
}
plots_bball2 = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball2[[pl_name]] = ggplot(rand_selected, aes_string("V2", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball2, ncol = 6, nrow = 6)
library(visNetwork)
library(tidyverse)
library(igraph)
library(plotly)
library(seriation)
library(tourr)
nodes<-read.table("trainMeta.dat")
nodes<-read.table("trainMeta.dat")
nodes<-read.table("trainMeta.dat")
setwd("C:/Users/Sridhar/Desktop/LIU-Assignments/VisualizationLab/Compli")
nodes<-read.table("trainMeta.dat")
colnames(nodes)<-c("label","group")
nodes$id<-rownames(nodes)
nodes<-nodes[,c(3,1,2)]
nodes$title<-nodes$label
nodes$color<-ifelse(nodes$group==1,"red","blue")
nodes<-data.frame(nodes)
links<-read.table("trainData.dat")
colnames(links)<-c("from","to","value")
links<-data.frame(links)
weight_nodes<-graph.data.frame(d=links,vertices=nodes,directed = F)
degree_nodes<-degree(weight_nodes,mode="all")
nodes$value<-degree_nodes[match(nodes$id,names(degree_nodes))]
q1<-visNetwork(nodes,links)%>%visPhysics(solver="repulsion") %>%
visOptions(highlightNearest = list(enabled = T,degree=0,
hover = T),nodesIdSelection=TRUE,
selectedBy = "group")
q1
dim(nodes)
nodes<-read.table("trainMeta.dat")
colnames(nodes)<-c("label","group")
dim(nodes)
nodes<-read.table("trainMeta.dat")
set.seed(12345)
rand_ind <- sample(seq_len(nrow(nodes)), size = smp_size)
nodes = nodes[rand_ind, ]
colnames(nodes)<-c("label","group")
nodes$id<-rownames(nodes)
nodes<-nodes[,c(3,1,2)]
nodes$title<-nodes$label
nodes$color<-ifelse(nodes$group==1,"red","blue")
nodes<-data.frame(nodes)
dim(nodes)
smp_size <- floor(0.30 * nrow(nodes))
nodes<-read.table("trainMeta.dat")
smp_size <- floor(0.30 * nrow(nodes))
set.seed(12345)
rand_ind <- sample(seq_len(nrow(nodes)), size = smp_size)
nodes = nodes[rand_ind, ]
colnames(nodes)<-c("label","group")
nodes$id<-rownames(nodes)
nodes<-nodes[,c(3,1,2)]
nodes$title<-nodes$label
nodes$color<-ifelse(nodes$group==1,"red","blue")
nodes<-data.frame(nodes)
dim(nodes)
70*30/100
links<-read.table("trainData.dat")
links
nodes
links$V1 == nodes$id
links[links$V1 == nodes$id,]
links$V1 == nodes$id
nodes$id
nodes$id
links$V1 == nodes$id
links[links$V1 == nodes$id,]
links
nodes
View(nodes)
View(links)
View(nodes)
View(links)
links[links$V1 == 1,]
links[links$V1 == c(1,2,3),]
links[links$V1 == nodes$id,]
nodes$id
as.integer(nodes$id)
links[links$V1 == as.integer(nodes$id),]
links[links$V1 == c(as.integer(nodes$id)),]
links$V1 == as.integer(nodes$id)
as.integer(nodes$id)==links$V1
links$V1
links[nodes$id,]
length(links[nodes$id,])
dim(links[nodes$id,])
View(nodes)
links[links$V1 == nodes$id[1],]
links[links$V1 == 51,]
links[links$V1 == "1",]
all_links<-read.table("trainData.dat")
links =  all_links[all_links$V1 == nodes$id[1],]
links
for(i in 2:length(nodes$id)){
temp = all_links[all_links$V1 == nodes$id[i],]
links = rbind(links, temp)
}
links
all_links<-read.table("trainData.dat")
temp_links =  all_links[all_links$V1 == nodes$id[1],]
for(i in 2:length(nodes$id)){
temp = all_links[all_links$V1 == nodes$id[i],]
temp_links = rbind(temp_links, temp)
}
links =  temp_links[temp_links$V2 == nodes$id[1],]
for(i in 2:length(nodes$id)){
temp = temp_links[temp_links$V2 == nodes$id[i],]
links = rbind(links, temp)
}
links
dim(links)
colnames(links)<-c("from","to","value")
links<-data.frame(links)
weight_nodes<-graph.data.frame(d=links,vertices=nodes,directed = F)
degree_nodes<-degree(weight_nodes,mode="all")
nodes$value<-degree_nodes[match(nodes$id,names(degree_nodes))]
q1<-visNetwork(nodes,links)%>%visPhysics(solver="repulsion") %>%
visOptions(highlightNearest = list(enabled = T,degree=0,
hover = T),nodesIdSelection=TRUE,
selectedBy = "group")
q1
###Q2
q2<-visNetwork(nodes,links)%>%visPhysics(solver="repulsion") %>%
visOptions(highlightNearest = list(enabled = T,degree=1,
hover = T),nodesIdSelection=TRUE,
selectedBy = "group")
q2
View(links)
###Q3
nodes1<-nodes
ceb<-cluster_edge_betweenness(weight_nodes)
nodes1$group<-ceb$membership
visNetwork(nodes1,links)%>%visIgraphLayout(layout = "layout_nicely")%>%
visOptions(highlightNearest = list(enabled = T,degree=1,
hover = T),nodesIdSelection=TRUE, selectedBy = "group")
###Q4
netm<-get.adjacency(weight_nodes,sparse = F)
colnames(netm)<-nodes$label
rownames(netm)<-nodes$label
rowdist<-dist(netm)
row_order<-seriate(rowdist,"HC")
order1<-get_order(row_order)
netm_reord<-netm[order1,order1]
plot_ly(z=~netm_reord,x=~colnames(netm_reord),
y=~rownames(netm_reord),type="heatmap")%>%
layout(title = " Madrid Bombing Heatmap for finding  clusters")
library(ggplot2)
library(plotly)
library(readxl)
library(MASS)
library(gridExtra)
#Lab 2 Assignment 2
#Q1
bball = read_xlsx("baseball-2016.xlsx", sheet = "Sheet1", col_names = TRUE)
head(bball)
smp_size <- floor(0.30 * nrow(bball))
## set the seed to make your partition reproducible
set.seed(12345)
rand_ind <- sample(seq_len(nrow(bball)), size = smp_size)
rand_selected = bball[rand_ind, ]
head(rand_selected)
#Q2
bball.numeric = scale(rand_selected[,3:27])
distance = dist(bball.numeric)
res = isoMDS(distance, k=2, p=2)
coords = res$points
coordsMDS = as.data.frame(coords)
coordsMDS$name = rownames(coordsMDS)
coordsMDS$league = rand_selected$League
plot_ly(coordsMDS, x=~V1, y=~V2, type="scatter", mode = "markers"
, hovertext=~name, color= ~league)
#Q3
sh <- Shepard(distance, coords)
delta <-as.numeric(distance)
D<- as.numeric(dist(coords))
n=nrow(coords)
index=matrix(1:n, nrow=n, ncol=n)
index1=as.numeric(index[lower.tri(index)])
n=nrow(coords)
index=matrix(1:n, nrow=n, ncol=n, byrow = T)
index2=as.numeric(index[lower.tri(index)])
plot_ly()%>%
add_markers(x=~delta, y=~D, hoverinfo = 'text',
text = ~paste('Obj1: ', rownames(rand_selected)[index1],
'<br> Obj 2: ', rownames(rand_selected)[index2]))%>%
add_lines(x=~sh$x, y=~sh$yf)
#Q4
rand_selected$V1 = coordsMDS$V1
rand_selected$V2 = coordsMDS$V2
cols_bball = c("Team", "League", "Won", "Lost", "Runs.per.game", "HR.per.game",
"AB", "Runs", "Hits", "TwoB", "ThreeB", "HR", "RBI", "StolenB", "CaughtS",
"BB", "SO", "BAvg", "OBP", "SLG", "OPS", "TB", "GDP", "HBP", "SH",
"SF", "IBB", "LOB", "V1", "V2")
colnames(rand_selected) = cols_bball
dim(rand_selected)[2]
plots_bball = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball[[pl_name]] = ggplot(rand_selected, aes_string("V1", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball, ncol = 6, nrow = 6)
plots_bball2 = list()
for(i in 2:27){
pl_name = paste("P", i, sep = '')
col_name = cols_bball[i]
plots_bball2[[pl_name]] = ggplot(rand_selected, aes_string("V2", col_name)) +
geom_point() + geom_line(aes(x=0))
}
grid.arrange(grobs = plots_bball2, ncol = 6, nrow = 6)
grid.arrange(grobs = plots_bball2, ncol = 6, nrow = 6)
grid.arrange(grobs = plots_bball, ncol = 6, nrow = 6)
##Assignment 1
###Q1
library(visNetwork)
library(tidyverse)
library(igraph)
library(plotly)
library(seriation)
library(tourr)
nodes<-read.table("trainMeta.dat")
smp_size <- floor(0.30 * nrow(nodes))
set.seed(12345)
rand_ind <- sample(seq_len(nrow(nodes)), size = smp_size)
nodes = nodes[rand_ind, ]
colnames(nodes)<-c("label","group")
nodes$id<-rownames(nodes)
nodes<-nodes[,c(3,1,2)]
nodes$title<-nodes$label
nodes$color<-ifelse(nodes$group==1,"red","blue")
nodes<-data.frame(nodes)
all_links<-read.table("trainData.dat")
temp_links =  all_links[all_links$V1 == nodes$id[1],]
for(i in 2:length(nodes$id)){
temp = all_links[all_links$V1 == nodes$id[i],]
temp_links = rbind(temp_links, temp)
}
links =  temp_links[temp_links$V2 == nodes$id[1],]
for(i in 2:length(nodes$id)){
temp = temp_links[temp_links$V2 == nodes$id[i],]
links = rbind(links, temp)
}
colnames(links)<-c("from","to","value")
links<-data.frame(links)
weight_nodes<-graph.data.frame(d=links,vertices=nodes,directed = F)
degree_nodes<-degree(weight_nodes,mode="all")
nodes$value<-degree_nodes[match(nodes$id,names(degree_nodes))]
q1<-visNetwork(nodes,links)%>%visPhysics(solver="repulsion") %>%
visOptions(highlightNearest = list(enabled = T,degree=0,
hover = T),nodesIdSelection=TRUE,
selectedBy = "group")
q1
###Q2
q2<-visNetwork(nodes,links)%>%visPhysics(solver="repulsion") %>%
visOptions(highlightNearest = list(enabled = T,degree=1,
hover = T),nodesIdSelection=TRUE,
selectedBy = "group")
q2
###Q3
nodes1<-nodes
ceb<-cluster_edge_betweenness(weight_nodes)
nodes1$group<-ceb$membership
visNetwork(nodes1,links)%>%visIgraphLayout(layout = "layout_nicely")%>%
visOptions(highlightNearest = list(enabled = T,degree=1,
hover = T),nodesIdSelection=TRUE, selectedBy = "group")
###Q4
netm<-get.adjacency(weight_nodes,sparse = F)
colnames(netm)<-nodes$label
rownames(netm)<-nodes$label
rowdist<-dist(netm)
row_order<-seriate(rowdist,"HC")
order1<-get_order(row_order)
netm_reord<-netm[order1,order1]
plot_ly(z=~netm_reord,x=~colnames(netm_reord),
y=~rownames(netm_reord),type="heatmap")%>%
layout(title = " Madrid Bombing Heatmap for finding  clusters")
